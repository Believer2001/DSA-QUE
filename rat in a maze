class Solution {
    public static ArrayList<String> findPath(int[][] m, int n) {
        // Your code here
        int vis[][]= new int[n][n];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                vis[i][j]=0;
            }
        }
        ArrayList<String> list= new ArrayList<>();
       if(m[0][0]==1) helper(m,n," ",vis,0,0,list);
        return list;
    }
    public static void helper(int[][] m, int n, String p,int vis[][], int r, int c,ArrayList<String> list){
        if(r==n-1&&c==n-1){
            list.add(p);
            return;
        }
        // downward
        if(r+1<n&&vis[r+1][c]==0&&m[r+1][c]==1){
            vis[r][c]=1;
            helper(m,n,p+'D',vis,r+1,c,list);
            vis[r][c]=0;
        }
        //  left
        if(c-1>=0&&vis[r][c-1]==0&&m[r][c-1]==1){
            vis[r][c]=1;
            helper(m,n,p+'L',vis,r,c-1,list);
            vis[r][c]=0;
        }
        // right
        if(c+1<n&&vis[r][c+1]==0&&m[r][c+1]==1){
             vis[r][c]=1;
            helper(m,n,p+'R',vis,r,c+1,list);
            vis[r][c]=0;
        }
        // upward
        if(r-1>=0&&vis[r-1][c]==0&&m[r-1][c]==1){
            vis[r][c]=1;
            helper(m,n,p+'U',vis,r-1,c,list);
             vis[r][c]=0;
        }
    }
}
